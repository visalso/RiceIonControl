# autogenerated 
# DO NOT EDIT DIRECTLY
# The file will be overwritten by the compiler
#
# const values
# variables 
var NULL 0
var FFFFFFFF 18446744073709551615
var INTERRUPT_EXITCODE 18446198715942174720
var a 0
var b 10
var c 128
var d 1
var e 1
var f 4096
var g 15
var h 15
var aa 0
var bb 10
var cc 128
var dd 1
var ee 1
var ff 4096
var gg 15
var hh 15
var inlinevar_3 1
var inlinevar_4 7
var inlinevar_5 3
var inlinevar_6 2
var inlinevar_7 4
var inlinevar_8 8
var inlinevar_9 255
# inline variables
# end header

# line 19: add_assignment: a += 1
  INC a
  STWR a
# line 20: add_assignment: a += 7
  LDWR a
  ADDW inlinevar_4
  STWR a
# line 22: add_assignment: b -= 1
  DEC b
  STWR b
# line 23: add_assignment: b -= 7
  LDWR b
  SUBW inlinevar_4
  STWR b
# line 25: add_assignment: c >>= 3
  LDWR c
  SHR inlinevar_5
  STWR c
# line 27: add_assignment: d <<= 2
  LDWR d
  SHL inlinevar_6
  STWR d
# line 29: add_assignment: e *= 1
  LDWR e
  MULTW inlinevar_3
  STWR e
# line 30: add_assignment: e *= 2
  LDWR e
  MULTW inlinevar_6
  STWR e
# line 31: add_assignment: e *= 3
  LDWR e
  MULTW inlinevar_5
  STWR e
# line 32: add_assignment: e *= 4
  LDWR e
  MULTW inlinevar_7
  STWR e
# line 33: add_assignment: e *= 7
  LDWR e
  MULTW inlinevar_4
  STWR e
# line 34: add_assignment: e *= 8
  LDWR e
  MULTW inlinevar_8
  STWR e
# line 36: add_assignment: f /= 8
  LDWR f
  DIVW inlinevar_8
  STWR f
# line 37: add_assignment: f /= 4
  LDWR f
  DIVW inlinevar_7
  STWR f
# line 38: add_assignment: f /= 1
  LDWR f
  DIVW inlinevar_3
  STWR f
# line 39: add_assignment: f /= 7
  LDWR f
  DIVW inlinevar_4
  STWR f
# line 41: add_assignment: g &= 3
  LDWR g
  ANDW inlinevar_5
  STWR g
# line 42: add_assignment: h |= 255
  LDWR h
  ORW inlinevar_9
  STWR h
# line 44: shiftexpression aa = aa + 1
  LDWR aa
  ADDW inlinevar_3
# line 44 assignment aa = aa + 1
  STWR aa
# line 45: shiftexpression aa = aa + 7
  LDWR aa
  ADDW inlinevar_4
# line 45 assignment aa = aa + 7
  STWR aa
# line 47: shiftexpression bb = bb - 1
  LDWR bb
  SUBW inlinevar_3
# line 47 assignment bb = bb - 1
  STWR bb
# line 48: shiftexpression bb = bb - 7
  LDWR bb
  SUBW inlinevar_4
# line 48 assignment bb = bb - 7
  STWR bb
# line 50: shiftexpression cc = cc >> 3
  LDWR cc
  SHR inlinevar_5
# line 50 assignment cc = cc >> 3
  STWR cc
# line 52: shiftexpression dd = dd << 2
  LDWR dd
  SHL inlinevar_6
# line 52 assignment dd = dd << 2
  STWR dd
# line 54: shiftexpression ee = ee * 1
  LDWR ee
  MULTW inlinevar_3
# line 54 assignment ee = ee * 1
  STWR ee
# line 55: shiftexpression ee = ee * 2
  LDWR ee
  MULTW inlinevar_6
# line 55 assignment ee = ee * 2
  STWR ee
# line 56: shiftexpression ee = ee * 3
  LDWR ee
  MULTW inlinevar_5
# line 56 assignment ee = ee * 3
  STWR ee
# line 57: shiftexpression ee = ee * 4
  LDWR ee
  MULTW inlinevar_7
# line 57 assignment ee = ee * 4
  STWR ee
# line 58: shiftexpression ee = ee * 7
  LDWR ee
  MULTW inlinevar_4
# line 58 assignment ee = ee * 7
  STWR ee
# line 59: shiftexpression ee = ee * 8
  LDWR ee
  MULTW inlinevar_8
# line 59 assignment ee = ee * 8
  STWR ee
# line 61: shiftexpression ff = ff / 8
  LDWR ff
  DIVW inlinevar_8
# line 61 assignment ff = ff / 8
  STWR ff
# line 62: shiftexpression ff = ff / 4
  LDWR ff
  DIVW inlinevar_7
# line 62 assignment ff = ff / 4
  STWR ff
# line 63: shiftexpression ff = ff / 1
  LDWR ff
  DIVW inlinevar_3
# line 63 assignment ff = ff / 1
  STWR ff
# line 64: shiftexpression ff = ff / 7
  LDWR ff
  DIVW inlinevar_4
# line 64 assignment ff = ff / 7
  STWR ff