###########################################################################
#
#  example for PulseProgramPlus input
#

const DDSDetect = 1
const DDSMicrowave = 2
const PMTChannel = 9

# 397 beam frequencies and amplitudes
parameter<AD9912_FRQ> DetectFreq = 100 MHz
parameter DetectAmp = 1023
parameter<AD9912_FRQ> MicrowaveFreq = 40 MHz
parameter<AD9912_PHASE> MicrowaveInitPhase = 0
parameter<AD9912_PHASE> MicrowaveAnalyzePhase = 0

# masks and shutters
shutter InitializationShutter 
masked_shutter CoolingOn
masked_shutter CoolingOff
masked_shutter PumpingOn
masked_shutter PumpingOff
masked_shutter MicrowaveOn
masked_shutter MicrowaveOff
masked_shutter DetectOn
masked_shutter DetectOff

# times
parameter CoolingTime = 1 ms
parameter PumpTime = 0 ms
parameter QubitInitTime = 0 ms
parameter QubitWaitTime = 0 ms
parameter QubitAnalyzeTime = 0 ms
parameter DetectTime = 1 ms
parameter AmplitudeSettlingTime = 100 us

# control parameters
parameter MaxInitRepeat = 10
parameter experiments = 100
parameter CheckIonCounters = 0
counter DetectCounters = 0
trigger ddsApplyTrigger =  3
trigger ddsMicrowaveApply = 3
parameter PresenceThreshold = 6

# excitcodes
exitcode IonLostExitcode = 0x1
exitcode endLabel = 0xffffffff

# internal variables
var experimentsleft = 100
var Null = 0
var initRemaining = 0
var currentexperiment = 0

def cool():
	set_shutter( CoolingOn )
	set_counter( CheckIonCounters )
	update( CoolingTime )
	set_counter( Null )
	update( )
	W = load_count( PMTChannel )

def pump():
	set_shutter( PumpingOn )
	update( PumpTime )
	set_shutter( PumpingOff )

def qubitInit():
	set_dds( channel=DDSMicrowave, freq=MicrowaveFreq, phase=MicrowaveInitPhase )
	set_trigger( ddsMicrowaveApply )
	set_shutter( MicrowaveOn )
	update( QubitInitTime )
	set_shutter( MicrowaveOff )

def qubitAnalyze():
	set_dds( channel=DDSMicrowave, freq=MicrowaveFreq, phase=MicrowaveAnalyzePhase )
	set_trigger( ddsMicrowaveApply )
	set_shutter( MicrowaveOn )
	update( QubitAnalyzeTime )
	set_shutter( MicrowaveOff )
	
def detect():
	set_dds( channel=DDSDetect, freq=DetectFreq )
	set_shutter( DetectOn )
	set_counter( DetectCounters )
	set_trigger( ddsApplyTrigger )
	update( DetectTime )
	set_shutter( DetectOff )
	

# startup switching on cooling quickly
set_shutter( InitializationShutter )
set_dds( channel=DDSDetect, freq=DetectFreq, amp=DetectAmp )
set_trigger( ddsApplyTrigger )

while not pipe_empty():
	update()
	apply_next_scan_point()
	
	currentexperiment = 0
	while currentexperiment < experiments:
		cool()
		if MaxInitRepeat>0: 
			initRemaining = MaxInitRepeat
			while W<PresenceThreshold:
				if initRemaining==0:
					exit( IonLostExitcode )
				cool()
		if PumpTime>0:
			pump()
		if QubitInitTime>0: 
			qubitInit()
		if QubitWaitTime>0:
			update( QubitWaitTime )
			qubitAnalyze()
		if DetectTime>0:
			detect()	
 	currentexperiment += 1

exit( endLabel )
